diff --git a/node_modules/@react-native-community/netinfo/android/build.gradle b/node_modules/@react-native-community/netinfo/android/build.gradle
index 36757f7..307333f 100644
--- a/node_modules/@react-native-community/netinfo/android/build.gradle
+++ b/node_modules/@react-native-community/netinfo/android/build.gradle
@@ -1,3 +1,5 @@
+import groovy.json.JsonSlurper
+
 buildscript {
   // The Android Gradle plugin is only required when opening the android folder stand-alone.
   // This avoids unnecessary downloads and potential conflicts when the library is included as a
@@ -14,6 +16,21 @@ buildscript {
   }
 }
 
+def readRnVersion() {
+  def f = new File(rootProject.projectDir, "../node_modules/react-native/package.json")
+  return f.exists() ? new JsonSlurper().parseText(f.text).version as String : "0.0.0"
+}
+
+def rnVersion = readRnVersion()
+
+static boolean isRNV74OrNewer(String v) {
+  def m = (v =~ /(\d+)\.(\d+)\.(\d+)/); if (!m.matches()) return false
+  def (maj, min, pat) = [m[0][1], m[0][2], m[0][3]].collect { it as int }
+  return (maj > 0) || (maj == 0 && (min > 74 || (min == 74 && pat >= 0)))
+}
+
+def rn74plus = isRNV74OrNewer(rnVersion)
+
 def getExtOrInitialValue(name, initialValue) {
   return rootProject.ext.has(name) ? rootProject.ext.get(name) : initialValue
 }
@@ -45,6 +62,8 @@ android {
   defaultConfig {
     minSdkVersion getExtOrIntegerDefault('minSdkVersion')
     targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
+    
+    buildConfigField "boolean", "IS_RN_74_OR_NEWER", rn74plus.toString()
   }
   lintOptions{
     abortOnError false
diff --git a/node_modules/@react-native-community/netinfo/android/src/main/java/com/reactnativecommunity/netinfo/NetInfoModule.java b/node_modules/@react-native-community/netinfo/android/src/main/java/com/reactnativecommunity/netinfo/NetInfoModule.java
index 626134a..c22236e 100644
--- a/node_modules/@react-native-community/netinfo/android/src/main/java/com/reactnativecommunity/netinfo/NetInfoModule.java
+++ b/node_modules/@react-native-community/netinfo/android/src/main/java/com/reactnativecommunity/netinfo/NetInfoModule.java
@@ -7,17 +7,26 @@
 package com.reactnativecommunity.netinfo;
 
 import android.os.Build;
+import android.util.Log;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
 import com.facebook.react.module.annotations.ReactModule;
 
-/** Module that monitors and provides information about the connectivity state of the device. */
+/**
+ * Module that monitors and provides information about the connectivity state of
+ * the device.
+ * Supports both RN < 0.74 and RN >= 0.74 by implementing both teardown hooks.
+ */
 @ReactModule(name = NetInfoModule.NAME)
-public class NetInfoModule extends ReactContextBaseJavaModule implements AmazonFireDeviceConnectivityPoller.ConnectivityChangedCallback {
+public class NetInfoModule extends ReactContextBaseJavaModule
+        implements AmazonFireDeviceConnectivityPoller.ConnectivityChangedCallback {
     public static final String NAME = "RNCNetInfo";
 
+    // Compile-time constant exposed via build.gradle (true when RN >= 0.74)
+    private static final boolean RN_74_PLUS = BuildConfig.IS_RN_74_OR_NEWER;
+
     private final ConnectivityReceiver mConnectivityReceiver;
     private final AmazonFireDeviceConnectivityPoller mAmazonConnectivityChecker;
 
@@ -39,19 +48,33 @@ public class NetInfoModule extends ReactContextBaseJavaModule implements AmazonF
     public void initialize() {
         mConnectivityReceiver.register();
         mAmazonConnectivityChecker.register();
+
+        Log.d(NAME, RN_74_PLUS
+                ? "RN >= 0.74 detected. Teardown via invalidate()."
+                : "RN < 0.74 detected. Teardown via onCatalystInstanceDestroy().");
     }
 
     // the upstream method was removed in react-native 0.74
     // this stub remains for backwards compatibility so that react-native < 0.74
     // (which will still call onCatalystInstanceDestroy) will continue to function
+    @SuppressWarnings({ "deprecation", "removal" })
     public void onCatalystInstanceDestroy() {
         invalidate();
+        if (!RN_74_PLUS) {
+            cleanup();
+        }
     }
 
     // This should have an `@Override` tag, but the method does not exist until
     // react-native >= 0.74, which would cause linting errors across versions
     // once minimum supported react-native here is 0.74+, add the tag
     public void invalidate() {
+        if (RN_74_PLUS) {
+            cleanup();
+        }
+    }
+
+    private void cleanup() {
         mAmazonConnectivityChecker.unregister();
         mConnectivityReceiver.unregister();
         mConnectivityReceiver.hasListener = false;
